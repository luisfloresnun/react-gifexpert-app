{"version":3,"sources":["component/AddCategory.js","component/GifGridItem.js","helpers/getGifs.js","component/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCLlBG,EAAc,SAAC,GAAqB,EAAnBC,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,IACnC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAQe,EAAIf,MACZC,IAAG,UAAGc,EAAIC,cAAP,aAAG,EAAYC,iBAAiBhB,QAZxB,kBAiBbY,GAjBa,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0BrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNjB,EAASC,GACJiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAQ,SAIrB,CAACb,IAEGc,EDfuBK,CAAanB,GAA/BU,EAAZ,EAAOJ,KAAYO,EAAnB,EAAmBA,QACnB,OACI,qCACI,+BAAKb,EAAL,OACCa,GAAW,4CAEZ,qBAAKjB,UAAU,YAAf,SAGQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIhB,aEbpB2B,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,aAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAEQ2C,EAAWb,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCrBnCsB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a825eb85.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 1){\r\n            setCategories( cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit} >\r\n            <input \r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=PRQd7IXvzAnqHbT69wA44BfKl6YSTZO8`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url //Signo ? por si no trae imagenes el api\r\n\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}\r\n","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3>{category} </h3>\r\n            {loading && <p>Loading ...</p>}\r\n\r\n            <div className=\"card-grid\">                \r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key={img.id}    \r\n                        {...img} \r\n                        />\r\n\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState ,useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs (category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n           \r\n    }, [category]);   \r\n\r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './component/AddCategory';\r\nimport { GifGrid } from './component/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch','Samurai X','Dragon ball Z'];\r\n\r\n    const [categories, setCategories] = useState(['Avengers']);\r\n\r\n    // const handleadd = () => {\r\n    //     // setCategories( [...categories,'Ranma 1/2']);\r\n    //     setCategories( cats => [...cats,'Ranma 1/2']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr />\r\n\r\n            \r\n\r\n            <ol>\r\n                {   \r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        \r\n                        />\r\n                        \r\n                    )) \r\n                    \r\n                }\r\n\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp /> ,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}